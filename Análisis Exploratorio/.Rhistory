theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Estancia Días`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#F58518", adjust = 0.5) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_estancia, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(media_estancia, 2), " | Mediana: ", round(mediana_estancia, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Estancia Días`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#F58518", adjust =1) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_estancia, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(media_estancia, 2), " | Mediana: ", round(mediana_estancia, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Estancia Días`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#F58518", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_estancia, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(media_estancia, 2), " | Mediana: ", round(mediana_estancia, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Estancia Días`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#FF77FF", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_estancia, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(media_estancia, 2), " | Mediana: ", round(mediana_estancia, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico con la curva de Densidad (naranja) Y la Gaussiana (roja)
SaludMental |>
ggplot(aes(x = Edad)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5,
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
# 3. Curva GAUSSIANA (Nueva línea - Curva Normal Teórica)
geom_function(
fun = dnorm, # La función de densidad normal
args = list(mean = media_edad, sd = sd_edad),
color = "#98FF98", # Color rojo/vino para diferenciar
linewidth = 1.2
) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_edad, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_edad, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Edad vs. Curva Normal Teórica",
subtitle = paste0("Media: ", round(media_edad, 2), " | Mediana: ", round(mediana_edad, 2), " | Desv. Estándar: ", round(sd_edad, 2)),
x = "Edad (Años)",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Estancia Días`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_estancia, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(media_estancia, 2), " | Mediana: ", round(mediana_estancia, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
summary(SaludMental)
glimpse(SaludMental)
glimpse(SaludMental)
library(tidyverse)
glimpse(SaludMental)
summary(SaludMental)
head(SaludMental)
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Estancia Días`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_estancia, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(media_estancia, 2), " | Mediana: ", round(mediana_estancia, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 1. Calcular Media, Mediana y Desviación Estándar de Estancia Días (excluyendo NA)
media_pesoEsp <- mean(SaludMental$`Peso Español APR`, na.rm = TRUE)
mediana_pesoEsp <- median(SaludMental$`Peso Español APR`, na.rm = TRUE)
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_pesoEsp, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_pesoEsp, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
unique(SaludMental$`Peso Español APR`)
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_pesoEsp, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_pesoEsp, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 20) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_pesoEsp, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_pesoEsp, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 10) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_pesoEsp, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_pesoEsp, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 10) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_pesoEsp, color = "Media", linewidth = 0.1),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_pesoEsp, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 10) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
SaludMental |> ggplot(aes(x = factor(Sexo))) + geom_bar(fill = "#1F77B4") + labs(x = "Sexo (1/2)")
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1, show.legend = FALSE, fill = "#1F77B4") +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void()
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1, show.legend = FALSE, fill = "#1F77B4") +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void()
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#FF7F0E"))
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#FF69B4"))
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#FFC0CB"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#FFC0CB"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#98FF98", "#FFC0CB"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#4CAF50", "#FFC0CB"))
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#E45756"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#98FF98", "#E45756"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#4CAF50", "#E45756"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Circunstancia de Contacto", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#4CAF50", "#E45756"))
```{r}
SaludMental |>
ggplot(aes(y = `Estancia Días`)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Detección de Outliers en Estancia Días",
y = "Estancia Días") +
theme_minimal()
SaludMental |>
ggplot(aes(y = `Estancia Días`)) +
geom_boxplot(fill = "lightblue")
