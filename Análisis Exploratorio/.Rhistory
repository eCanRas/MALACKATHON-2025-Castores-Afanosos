ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_pesoEsp, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_pesoEsp, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 10) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_pesoEsp, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_pesoEsp, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 10) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# 4. Marcas de Media y Mediana
geom_vline(aes(xintercept = media_pesoEsp, color = "Media", linewidth = 0.1),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_pesoEsp, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
xlim(0, 10) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# 2. Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
# 1. Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días vs. Curva Normal",
subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
SaludMental |> ggplot(aes(x = factor(Sexo))) + geom_bar(fill = "#1F77B4") + labs(x = "Sexo (1/2)")
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1, show.legend = FALSE, fill = "#1F77B4") +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void()
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1, show.legend = FALSE, fill = "#1F77B4") +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void()
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#FF7F0E"))
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#FF69B4"))
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#FFC0CB"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#FFC0CB"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#98FF98", "#FFC0CB"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#4CAF50", "#FFC0CB"))
SaludMental |>
ggplot(aes(x = "", fill = factor(Sexo))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#1F77B4", "#E45756"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#98FF98", "#E45756"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#4CAF50", "#E45756"))
SaludMental |>
ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) +
geom_bar(stat = "count", width = 1) +
coord_polar(theta = "y") +
labs(title = "Circunstancia de Contacto", x = NULL, y = NULL) +
theme_void() +
scale_fill_manual(values = c("#4CAF50", "#E45756"))
```{r}
SaludMental |>
ggplot(aes(y = `Estancia Días`)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Detección de Outliers en Estancia Días",
y = "Estancia Días") +
theme_minimal()
SaludMental |>
ggplot(aes(y = `Estancia Días`)) +
geom_boxplot(fill = "lightblue")
SaludMental$`Número de registro anual`
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(skimr)
library(ggplot2)
# Porcentaje de NA en cada columna
porcentaje_na_columnas <- sapply(SaludMental, function(x) sum(is.na(x)) / length(x) * 100)
porcentaje_na_columnas
SaludMental$`Fecha de Fin Contacto`
view(SaludMental)
str(SaludMental)
head(summary(SaludMental))
head(summary(SaludMental))
summary(SaludMental)[1]
summary(SaludMental)
SaludMental |>
select(
c(1:6)
) |>
summary()
SaludMental |>
select(
c(1:10)
) |>
summary()
SaludMental |>
select(c(1:10)) |>
summary()
mean(SaludMental$`Peso Español APR`, na.rm = TRUE)
#  Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
#  Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(count)),
binwidth = 0.5, # Agrupa los días en intervalos de 0.5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución del Peso Español APR",
subtitle = paste0("Media: ", round(media_pesoEsp, 2),
" | Mediana: ", round(mediana_pesoEsp, 2)),
x = "Peso Español APR",
y = "Densidad"
) +
theme_minimal()
# Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Estancia Días`)) +
# Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(count)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# Curva de Densidad
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# Marcas de Media y Mediana
geom_vline(aes(xintercept = media_estancia, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días",
subtitle = paste0("Media: ", round(media_estancia, 2),
" | Mediana: ", round(mediana_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# Generar el gráfico con la curva Gaussiana (verde)
SaludMental |>
ggplot(aes(x = Edad)) +
# Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(count)),
binwidth = 5,
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# Curva GAUSSIANA
geom_function(
fun = dnorm, # La función de densidad normal
args = list(mean = media_edad, sd = sd_edad),
color = "#98FF98",
linewidth = 1.2
) +
# Marcas de Media y Mediana
geom_vline(aes(xintercept = media_edad, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_edad, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Edad vs. Curva Normal Teórica",
subtitle = paste0("Media: ", round(media_edad, 2),
" | Mediana: ", round(mediana_edad, 2),
" | Desv. Estándar: ", round(sd_edad, 2)),
x = "Edad (Años)",
y = "Densidad"
) +
theme_minimal()
#  Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Peso Español APR`)) +
#  Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 0.5, # Agrupa los días en intervalos de 0.5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución del Peso Español APR",
subtitle = paste0("Media: ", round(media_pesoEsp, 2),
" | Mediana: ", round(mediana_pesoEsp, 2)),
x = "Peso Español APR",
y = "Densidad"
) +
theme_minimal()
# Generar el gráfico de distribución
SaludMental |>
ggplot(aes(x = `Estancia Días`)) +
# Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5, # Agrupa los días en intervalos de 5
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# Curva de Densidad
geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +
# Marcas de Media y Mediana
geom_vline(aes(xintercept = media_estancia, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Limitamos el eje X para evitar que el outlier de 814 comprima el gráfico
xlim(0, 80) +
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Estancia en Días",
subtitle = paste0("Media: ", round(media_estancia, 2),
" | Mediana: ", round(mediana_estancia, 2)),
x = "Estancia Días",
y = "Densidad"
) +
theme_minimal()
# Generar el gráfico con la curva Gaussiana (verde)
SaludMental |>
ggplot(aes(x = Edad)) +
# Histograma (Muestra la frecuencia real de los datos)
geom_histogram(
aes(y = after_stat(density)),
binwidth = 5,
fill = "#4C78A8",
color = "white",
alpha = 0.5
) +
# Curva GAUSSIANA
geom_function(
fun = dnorm, # La función de densidad normal
args = list(mean = media_edad, sd = sd_edad),
color = "#98FF98",
linewidth = 1.2
) +
# Marcas de Media y Mediana
geom_vline(aes(xintercept = media_edad, color = "Media"),
linetype = "dashed", linewidth = 1) +
geom_vline(aes(xintercept = mediana_edad, color = "Mediana"),
linetype = "solid", linewidth = 1) +
# Etiquetas y tema
scale_color_manual(name = "Estadístico",
values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
labs(
title = "Distribución de la Edad vs. Curva Normal Teórica",
subtitle = paste0("Media: ", round(media_edad, 2),
" | Mediana: ", round(mediana_edad, 2),
" | Desv. Estándar: ", round(sd_edad, 2)),
x = "Edad (Años)",
y = "Densidad"
) +
theme_minimal()
#where(is.)
) |>
SaludMental |>
select(
where(is.numeric), # Selecciona todas las columnas de tipo numérico/entero
where(is.factor)   # Selecciona todas las columnas de tipo factor
#where(is.)
) |>
skim()
head(porcentaje_na_columnas)
head(porcentaje_na_columnas, 10)
head(porcentaje_na_columnas, 15)
head(porcentaje_na_columnas,30)
SaludMental$`CIP SNS Recodificado`
unique(SaludMental$`CIP SNS Recodificado`)
SaludMental |>
select(Nombre, `CIP SNS Recodificado`, Edad, Edad_Rango)
SaludMental <-  SaludMental |>
mutate(Edad_Rango = case_when( SaludMental$Edad < 18 ~ "Menor (0-17)", SaludMental$Edad >= 18 & SaludMental$Edad < 45 ~ "Adulto (18-44)", SaludMental$Edad >= 45 & SaludMental$Edad < 65 ~ "Adulto (45-64)", TRUE ~ "Mayor (65+)" ))
SaludMental |>
select(Nombre, `CIP SNS Recodificado`, Edad, Edad_Rango)
# Porcentaje de NA en cada columna
porcentaje_na_columnas <- sapply(SaludMental, function(x) round(sum(is.na(x)) / length(x) * 100, 2))
head(porcentaje_na_columnas,30)
SaludMental$Reingreso
str(SaludMental$Reingreso)
str(SaludMental$`Nivel Severidad APR`)
str(SaludMental$`Nivel Severidad APR`)
count(SaludMental$`Nivel Severidad APR`)
count_n(SaludMental$`Nivel Severidad APR`)
n_count(SaludMental$`Nivel Severidad APR`)
help(diff)
install.packages("dlookr")
library(dlookr)
is.null(SaludMental$`Circunstancia de Contacto`)
is.null(SaludMental$`Diagnóstico 5`)
is.null(SaludMental$`CCAA Residencia`)
diagnostico <- SaludMental |>
diagnose()
# 2. Filtrar el diagnóstico donde el conteo de NA es igual al total de filas
columnas_nulas_dlookr <- diagnostico |>
filter(missing_count == n) |>
pull(variable)
diagnostico <- SaludMental |>
diagnose()
# 2. Filtrar el diagnóstico donde el conteo de NA es igual al total de filas
columnas_nulas_dlookr <- diagnostico |>
filter(missing_count == n) |>
pull(variable)
col_nulas <- SaludMental |>
select(
where(
~ all(is.na(.)) # Condición: donde TODOS los valores (all) son NA en esa columna (.)
)
) |>
names()
col_nulas
unique(SaludMental$`Tipo PROCESO IR`)
SaludMental$`CCAA Residencia` <- NULL
SaludMental$`Valor Peso Español`<- NULL
SaludMental$`Valor Peso Americano APR`<- NULL
SaludMental$`Tipo PROCESO IR`<- NULL
porcentaje_na_columnas
SaludMental$`Mes de Ingreso`<- NULL
SaludMental$`Edad en Ingreso`<- NULL
str(SaludMental$`Ingreso en UCI`)
SaludMental$Procedencia <- NULL
diagnose(SaludMental)
unique(SaludMental$`Diagnóstico 13`)
SaludMental$Sexo[is.na(SaludMental$Sexo)]
SaludMental$Sexo[is.na(SaludMental$Sexo)]  <- "No especificado"
SaludMental$Sexo[is.na(SaludMental$Sexo)]
diagnose(SaludMental)
SaludMental[is.na(SaludMental$`CIP SNS Recodificado`)]
is.na(SaludMental$`CIP SNS Recodificado`)
SaludMental[is.na(SaludMental$`CIP SNS Recodificado`),]
SaludMental[is.na(SaludMental$`CIP SNS Recodificado`),]  <- NULL
SaludMental[is.na(SaludMental$`CIP SNS Recodificado`),]
SaludMental[!is.na(SaludMental$`CIP SNS Recodificado`),]
SaludMental <-  SaludMental |>
SaludMental[!is.na(SaludMental$`CIP SNS Recodificado`),]
SaludMental <- SaludMental[!is.na(SaludMental$`CIP SNS Recodificado`),]
diagnose(SaludMental)
diagnose(SaludMental)
