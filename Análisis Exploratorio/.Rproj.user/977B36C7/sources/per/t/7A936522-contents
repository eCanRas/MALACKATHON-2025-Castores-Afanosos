---
title: "SaludMental"
author: "Marta"
date: "2025-10-15"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)


library(tidyverse)
library(readxl)
library(skimr)
library(ggplot2)

```

Este análisis tiene como objetivo principal proporcionar una visión estadística elemental y una evaluación de la calidad de los datos contenidos en el dataset de salud mental, abarcando la identificación de tipos de variables, la cuantificación de datos faltantes (nulos o desconocidos) y la detección preliminar de valores atípicos (outliers).

```{r}
SaludMental <- read_excel("SaludMental.xls")
head(SaludMental)
```

## Estructura y Tipos de Datos

En primer lugar, la estructura del conjunto de datos es revisada para verificar que se han inferido correctamente el tipo de cada variable.

-   **Variables categóricas**. Columnas como la *comunidad*, el *sexo*, *circunstancia de contacto* o *diagnóstico.*

-   **Variables numéricas.** Variables como *Estancia Días* o *Edad* fueron confirmadas como de tipo entero (`int`), double(`dbl`) o numérico (`num`), permitiendo el cálculo de medidas de tendencia central y dispersión.

-   **Tipos de Datos Desconocidos.** Se identificaron algunas variables como *CCAA Residencia* o *Reingreso* en las que no hay datos, por lo que no se tiene información de tipo

### Análisis Estadístico Elemental y Outliers

```{r}
summary(SaludMental)

```

Observamos que en algunas variables claves como la *Edad,* en la que la media y la mediana son muy cercanas, sugiriendo que sigue una distribución simétrica o muy ligeramente sesgada.

```{r}
summary(SaludMental$Edad)
```

```{r}
# 1. Calcular Media y Desviación Estándar (excluyendo NA)
media_edad <- mean(SaludMental$Edad, na.rm = TRUE)
sd_edad <- sd(SaludMental$Edad, na.rm = TRUE)
mediana_edad <- median(SaludMental$Edad, na.rm = TRUE)

# 2. Generar el gráfico con la curva de Densidad (naranja) Y la Gaussiana (roja)
SaludMental |>
  ggplot(aes(x = Edad)) +
  # 1. Histograma (Muestra la frecuencia real de los datos)
  geom_histogram(
    aes(y = after_stat(density)),
    binwidth = 5,
    fill = "#4C78A8",
    color = "white",
    alpha = 0.5
  ) +
  # 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)

  # 3. Curva GAUSSIANA (Nueva línea - Curva Normal Teórica)
  geom_function(
    fun = dnorm, # La función de densidad normal
    args = list(mean = media_edad, sd = sd_edad),
    color = "#98FF98", # Color rojo/vino para diferenciar
    linewidth = 1.2
  ) +

  # 4. Marcas de Media y Mediana
  geom_vline(aes(xintercept = media_edad, color = "Media"),
             linetype = "dashed", linewidth = 1) +
  geom_vline(aes(xintercept = mediana_edad, color = "Mediana"),
             linetype = "solid", linewidth = 1) +

  # Etiquetas y tema
  scale_color_manual(name = "Estadístico",
                     values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
  labs(
    title = "Distribución de la Edad vs. Curva Normal Teórica",
    subtitle = paste0("Media: ", round(media_edad, 2), " | Mediana: ", round(mediana_edad, 2), " | Desv. Estándar: ", round(sd_edad, 2)),
    x = "Edad (Años)",
    y = "Densidad"
  ) +
  theme_minimal()
```

Por otro lado, en variables como *Estancia Dias,* el valor máximo (814) está muy por encima de la media (15,46), lo que confirma la presencia de outliers extremos los cuales, elevan el valor de la media con relación a la mediana (11), dando lugar a una distribución sesgada.

```{r warning=FALSE}
summary(SaludMental$`Estancia Días`)
```

```{r warning=FALSE}
# 1. Calcular Media, Mediana y Desviación Estándar de Estancia Días (excluyendo NA)
media_estancia <- mean(SaludMental$`Estancia Días`, na.rm = TRUE)
sd_estancia <- sd(SaludMental$`Estancia Días`, na.rm = TRUE)
mediana_estancia <- median(SaludMental$`Estancia Días`, na.rm = TRUE)

# 2. Generar el gráfico de distribución
SaludMental |>
  ggplot(aes(x = `Estancia Días`)) +
  # 1. Histograma (Muestra la frecuencia real de los datos)
  geom_histogram(
    aes(y = after_stat(density)),
    binwidth = 5, # Agrupa los días en intervalos de 5
    fill = "#4C78A8",
    color = "white",
    alpha = 0.5
  ) +
  # 2. Curva de Densidad (Naranja - Estimación suavizada real de los datos)
  geom_density(linewidth = 1.2, color = "#98FF98", adjust = 2) +

  # 4. Marcas de Media y Mediana
  geom_vline(aes(xintercept = media_estancia, color = "Media"),
             linetype = "dashed", linewidth = 1) +
  geom_vline(aes(xintercept = mediana_estancia, color = "Mediana"),
             linetype = "solid", linewidth = 1) +

  # Limitamos el eje X para apreciar la asimetría y evitar que el outlier de 814 comprima el gráfico
  xlim(0, 80) +

  # Etiquetas y tema
  scale_color_manual(name = "Estadístico",
                     values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
  labs(
    title = "Distribución de la Estancia en Días vs. Curva Normal",
    subtitle = paste0("Media: ", round(media_estancia, 2), " | Mediana: ", round(mediana_estancia, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
    x = "Estancia Días",
    y = "Densidad"
  ) +
  theme_minimal()
```

De la misma forma, la variable *Peso Español APR* tiene una sutil asimetría negativa, ya que al igual que la variable anterior, contiene potenciales outliers.

```{r warning=FALSE}
# 1. Calcular Media, Mediana y Desviación Estándar de Estancia Días (excluyendo NA)
media_pesoEsp <- mean(SaludMental$`Peso Español APR`, na.rm = TRUE)
mediana_pesoEsp <- median(SaludMental$`Peso Español APR`, na.rm = TRUE)

# 2. Generar el gráfico de distribución
SaludMental |>
  ggplot(aes(x = `Peso Español APR`)) +
  # 1. Histograma (Muestra la frecuencia real de los datos)
  geom_histogram(
    aes(y = after_stat(density)),
    binwidth = 0.5, # Agrupa los días en intervalos de 5
    fill = "#4C78A8",
    color = "white",
    alpha = 0.5
  ) +
  
  # Etiquetas y tema
  scale_color_manual(name = "Estadístico",
                     values = c("Media" = "#4C78A8", "Mediana" = "#E45756")) +
  labs(
    title = "Distribución de la Estancia en Días vs. Curva Normal",
    subtitle = paste0("Media: ", round(mediana_pesoEsp, 2), " | Mediana: ", round(mediana_pesoEsp, 2), " | Desv. Estándar: ", round(sd_estancia, 2)),
    x = "Estancia Días",
    y = "Densidad"
  ) +
  theme_minimal()
```

### Análisis de Variables Categóricas

Al igual que en el apartado anterior, se contemplan variables categóricas con valores atípicos.

```{r}
summary(SaludMental$Sexo)
unique(SaludMental$Sexo)

```

Se puede ver que el valor máximo es 9, lo cual es evidentemente un valor incorrecto. Para corregirlo, cambiaremos el valor a NA

```{r}

SaludMental$Sexo[SaludMental$Sexo==9] <- NA
```

Una vez corregida la inconsistencia, se muestra una representación de la variable

```{r}

SaludMental |> 
   ggplot(aes(x = "", fill = factor(Sexo))) + 
  geom_bar(stat = "count", width = 1) + 
  coord_polar(theta = "y") + 
  labs(title = "Distribución de Sexo", x = NULL, y = NULL) +
  theme_void() +
  scale_fill_manual(values = c("#1F77B4", "#FFC0CB")) 
```

```{r}
SaludMental |> 
   ggplot(aes(x = "", fill = factor(`Circunstancia de Contacto`))) + 
  geom_bar(stat = "count", width = 1) + 
  coord_polar(theta = "y") + 
  labs(title = " Distribución Circunstancia de Contacto", x = NULL, y = NULL) +
  theme_void() +
  scale_fill_manual(values = c("#4CAF50", "#E45756")) 
```

## Estudio de Valores Desconocidos (NA)

En este estudio veremos el porcentaje de valores NA del dataset.

```{r}
skim(SaludMental)
```

Podemos observar un resumen acerca de los valores nulos en varias columnas

```{r}
colSums(is.na(SaludMental))

# Porcentaje de NA en cada columna 
porcentaje_na_columnas <- sapply(SaludMental, function(x) sum(is.na(x)) / length(x) * 100)
porcentaje_na_columnas

```

De esta manera podemos observar que hay varias columnas con un alto porcentaje de valores nulos, como pueden ser muchos de los diagnósticos, además de varias columnas con todos los valores nulos, como *CCAA Residencia* o un gran número de los procedimientos.

## Detección y Análisis de Outliers

```{r}

SaludMental |>
  ggplot(aes(y = `Estancia Días`)) +
  geom_boxplot(fill = "lightblue") +
  labs(title = "Detección de Outliers en Estancia Días",
       y = "Estancia Días") +
  theme_minimal()
```
